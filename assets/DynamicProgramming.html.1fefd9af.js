import{_ as e,r as t,o,c,a as n,b as a,d as p,F as l,e as r}from"./app.2859fef2.js";const u={},i=r(`<h1 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h1><p>\u52A8\u6001\u89C4\u5212(Dynamic Programming)</p><p><img src="https://pic3.zhimg.com/80/v2-c52955197d68993e184159c566b1646e_1440w.jpg?source=1940ef5c" alt="dynamic programming"></p><p>\u52A8\u6001\u89C4\u5212\u95EE\u9898\u7684\u7C7B\u522B <img src="https://pica.zhimg.com/80/v2-21366d47656574b928749040c6cc1888_1440w.jpg?source=1940ef5c" alt="\u52A8\u6001\u89C4\u5212\u95EE\u9898\u7684\u7C7B\u522B"></p><h2 id="\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u90A3\u5951\u6570\u5217</h2><p>\u9012\u5F52\u6267\u884C <img src="https://pic2.zhimg.com/80/v2-c63fddb5f669fc734aa4e2e78ce3f386_1440w.jpg?source=1940ef5c" alt=""></p><p>\u52A8\u6001\u89C4\u5212</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">auto</span> fib_dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">result</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
            result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            result<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> result<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> result<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span>
            std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> result<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
        std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token function">fib_dp</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> ans <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span> 
<span class="token number">1</span> <span class="token number">1</span> 
<span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> 
<span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> 
<span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> 
<span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">8</span> 
<span class="token number">8</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="https://pic2.zhimg.com/80/v2-33851c3d8a177aad6c6050a834e91bed_1440w.jpg?source=1940ef5c" alt=""></p><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,12),k={href:"https://en.wikipedia.org/wiki/Dynamic_programming#History",target:"_blank",rel:"noopener noreferrer"},b={href:"https://mp.weixin.qq.com/s/pg-IJ8rA1duIzt5hW1Cycw",target:"_blank",rel:"noopener noreferrer"},m={href:"https://leetcode-cn.com/tag/dynamic-programming/problemset/",target:"_blank",rel:"noopener noreferrer"};function d(h,g){const s=t("ExternalLinkIcon");return o(),c(l,null,[i,n("ul",null,[n("li",null,[n("a",k,[a("\u7EF4\u57FA\u767E\u79D1-\u52A8\u6001\u89C4\u5212"),p(s)])]),n("li",null,[n("a",b,[a("\u544A\u522B\u52A8\u6001\u89C4\u5212\uFF0C\u8FDE\u523740\u9053\u52A8\u89C4\u7B97\u6CD5\u9898\uFF0C\u6211\u603B\u7ED3\u4E86\u52A8\u89C4\u7684\u5957\u8DEF"),p(s)])]),n("li",null,[n("a",m,[a("\u529B\u6263-\u52A8\u6001\u89C4\u5212"),p(s)])])])],64)}var _=e(u,[["render",d],["__file","DynamicProgramming.html.vue"]]);export{_ as default};
