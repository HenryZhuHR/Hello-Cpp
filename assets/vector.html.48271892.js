import{_ as n,e as s}from"./app.2859fef2.js";const a={},p=s(`<h1 id="vector" tabindex="-1"><a class="header-anchor" href="#vector" aria-hidden="true">#</a> Vector</h1><p>\u52A8\u6001\u6570\u7EC4</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316" aria-hidden="true">#</a> \u521D\u59CB\u5316</h2><ol><li>\u5B9A\u4E49\u7A7A\u6570\u7EC4</li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> vec<span class="token punctuation">;</span>  <span class="token comment">// vec = []</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li><code>vector(int nSize)</code></li></ol><p>\u5B9A\u4E49 int \u7C7B\u578B\u7684\u957F\u5EA6\u4E3A 5 \u7684\u6570\u7EC4\uFF0C\u5E76\u4E14\u5143\u7D20\u4F1A\u88AB\u9ED8\u8BA4\u521D\u59CB\u5316 (int \u9ED8\u8BA4\u521D\u59CB\u5316\u4E3A 0)</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// vec = [0,0,0,0,0]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol><li><code>vector(int nSize,const t&amp; t)</code></li></ol><p>\u5B9A\u4E49 int \u7C7B\u578B\u7684\u957F\u5EA6\u4E3A 3 \u7684\u6570\u7EC4 \uFF0C\u5E76\u4E14\u5C06\u5143\u7D20\u521D\u59CB\u5316\u4E3A2</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// vec = [2,2,2]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol><li>\u7528\u521D\u59CB\u5316\u5217\u8868\u7684\u65B9\u5F0F\u521D\u59CB\u5316</li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> vec<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="5"><li><code>vector(const vector&amp;)</code> \u62F7\u8D1D\u6784\u9020\u51FD\u6570</li></ol><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> _vec<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span>_vec<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="6"><li><code>vector(begin,end)</code></li></ol><p>\u7528\u6570\u7EC4\u521D\u59CB\u5316</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span>array<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// vec = [1,2,3,4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="7"><li><code>vector(begin,end)</code></li></ol><p>\u8FED\u4EE3\u5668\u521D\u59CB\u5316\uFF0C\u5C06 <code>[begin,end)</code> \u8303\u56F4\u5185\u7684\u5143\u7D20\u8FDB\u884C\u521D\u59CB\u5316</p><ul><li>\u901A\u8FC7 vector \u81EA\u5E26\u7684\u8FED\u4EE3\u5668\u6765\u8FDB\u884C\u521D\u59CB\u5316</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> _vec<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span>_vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>_vec<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// vec = [1,2,3]</span>
std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span><span class="token function">begin</span><span class="token punctuation">(</span>_vec<span class="token punctuation">)</span><span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span><span class="token function">end</span><span class="token punctuation">(</span>_vec<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// vec = [1,2,3]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u901A\u8FC7 vector \u81EA\u5E26\u7684\u8FED\u4EE3\u5668\u6765\u8FDB\u884C\u521D\u59CB\u5316</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> _vec<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span>_vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>_vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// vec = [1,2,3]</span>
std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">vec</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span><span class="token function">begin</span><span class="token punctuation">(</span>_vec<span class="token punctuation">)</span><span class="token punctuation">,</span>std<span class="token double-colon punctuation">::</span><span class="token function">begin</span><span class="token punctuation">(</span>_vec<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// vec = [1,2,3]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h2><h3 id="push-back" tabindex="-1"><a class="header-anchor" href="#push-back" aria-hidden="true">#</a> push_back</h3><p>\u5728\u5C3E\u90E8\u6DFB\u52A0\u5143\u7D20</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [1,2,3] -&gt; [1,2,3,4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="emplace-back" tabindex="-1"><a class="header-anchor" href="#emplace-back" aria-hidden="true">#</a> emplace_back</h3><p>\u5728\u5C3E\u90E8\u6DFB\u52A0\u5143\u7D20\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u662F\u901A\u8FC7\u6784\u9020\u51FD\u6570\u6765\u521B\u5EFA\u5143\u7D20\uFF0C\u800C\u4E0D\u4F1A\u6389\u7528\u62F7\u8D1D\u6784\u9020\u51FD\u6570\uFF0C\u51CF\u5C11\u4E86\u4E00\u6B21\u5185\u5B58\u6D88\u8017</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">emplace_back</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1,2,3,4] -&gt; [1,2,3,4,5]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="pop-back" tabindex="-1"><a class="header-anchor" href="#pop-back" aria-hidden="true">#</a> pop_back</h3><p>\u5220\u9664\u5C3E\u90E8\u7684\u5143\u7D20\uFF0C\u65E0\u8FD4\u56DE\u503C</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">pop_back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1,2,3,4,5] -&gt; [1,2,3,4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="insert" tabindex="-1"><a class="header-anchor" href="#insert" aria-hidden="true">#</a> insert</h3><p>\u5728\u6307\u5B9A\u4F4D\u7F6E\u6DFB\u52A0\u5143\u7D20\uFF0C\u63D2\u5165\u7684\u4F4D\u7F6E\u9700\u8981\u7528\u8FED\u4EE3\u5668\u6765\u6307\u5B9A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1,2,3,4] -&gt; [1,2,6,3,4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="emplace" tabindex="-1"><a class="header-anchor" href="#emplace" aria-hidden="true">#</a> emplace</h3><p>\u4E0E <code>insert()</code> \u529F\u80FD\u76F8\u540C\uFF0C\u4F46\u662F\u4E0D\u4F1A\u8C03\u7528\u62F7\u8D1D\u6784\u9020\u51FD\u6570\uFF0C\u51CF\u5C11\u4E86\u4E00\u6B21\u5185\u5B58\u6D88\u8017</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">emplace</span><span class="token punctuation">(</span>vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1,2,3,4] -&gt; [1,2,9,3,4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="insert-1" tabindex="-1"><a class="header-anchor" href="#insert-1" aria-hidden="true">#</a> insert</h3><p>\u540C\u4E00\u4E2A\u4F4D\u7F6E\u6DFB\u52A0\u591A\u6B21\u5143\u7D20\uFF0C\u63D2\u5165\u7684\u4F4D\u7F6E\u9700\u8981\u7528\u8FED\u4EE3\u5668\u6765\u6307\u5B9A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1,2,3] -&gt; [1,8,8,2,3]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u8BBF\u95EE\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EE\u65B9\u5F0F" aria-hidden="true">#</a> \u8BBF\u95EE\u65B9\u5F0F</h2><h3 id="operator-\u4E0B\u6807\u8BBF\u95EE" tabindex="-1"><a class="header-anchor" href="#operator-\u4E0B\u6807\u8BBF\u95EE" aria-hidden="true">#</a> operator[]\u4E0B\u6807\u8BBF\u95EE</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">// [1, 2, 3, 4] -&gt; 3</span>
vec<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// [1, 2, 3, 4] -&gt; 2043</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="at-\u65B9\u6CD5\u8BBF\u95EE" tabindex="-1"><a class="header-anchor" href="#at-\u65B9\u6CD5\u8BBF\u95EE" aria-hidden="true">#</a> at() \u65B9\u6CD5\u8BBF\u95EE</h3><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [1, 2, 3, 4] -&gt; 3</span>
vec<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// error: libc++abi: terminating with uncaught exception of type std::out_of_range: vector</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p><code>[]</code> \u548C <code>at()</code> \u4E24\u79CD\u8BBF\u95EE\u65B9\u5F0F\u7684\u533A\u522B\u5728\u4E8E\uFF0C <code>[]</code> \u5219\u4E0D\u4F1A\u68C0\u67E5\u7D22\u5F15\u662F\u5426\u6709\u6548\uFF0C\u800C\u5728\u5F53\u7D22\u5F15\u65E0\u6548\u65F6\uFF0C <code>at()</code> \u4F1A\u629B\u51FA <code>std::out_of_range</code> \u5F02\u5E38\u3002</p><p>\u53E6\u5916\uFF0C\u4E3A\u4E86\u6548\u7387\uFF0CC++ \u6807\u51C6\u4E0D\u8981\u6C42 <code>std::vector::operator[]</code> \u8FDB\u884C\u7D22\u5F15\u68C0\u67E5\uFF0C\u603B\u662F\u5F3A\u5236\u68C0\u67E5\u7D22\u5F15\u7684\u6709\u6548\u6027\u4F1A\u589E\u52A0\u7A0B\u5E8F\u7684\u6027\u80FD\u5F00\u9500\u3002\u4F7F\u7528 <code>[]</code> \u6216 <code>at()</code> \u53D6\u51B3\u4E8E\u6548\u7387\u548C\u5B89\u5168\u6027\u7684\u53D6\u820D\u3002</p></blockquote><h3 id="\u8FED\u4EE3\u5668\u8BBF\u95EE" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u8BBF\u95EE" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u8BBF\u95EE</h3><ul><li><code>begin()</code>/<code>end()</code> \u662F\u5BB9\u5668\u7684\u6B63\u5411\u8FED\u4EE3\u5668\uFF0C\u8868\u793A\u7B2C\u4E00\u4E2A\u5143\u7D20/\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">auto</span> begin <span class="token operator">=</span> vec<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span>   end <span class="token operator">=</span> vec<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">*</span>begin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><code>cbegin()</code>/<code>cend()</code> \u662F\u5BB9\u5668\u5E38\u91CF\u6B63\u5411\u8FED\u4EE3\u5668\uFF0C\u4F46\u662F\u4E0D\u80FD\u4FEE\u6539\u5176\u6307\u5411\u7684\u5143\u7D20</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">auto</span> begin <span class="token operator">=</span> vec<span class="token punctuation">.</span><span class="token function">cbegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">auto</span>   end <span class="token operator">=</span> vec<span class="token punctuation">.</span><span class="token function">cend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">*</span>begin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">// error: cannot assign to &#39;const int&amp;&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><code>rbegin()</code>/<code>rend()</code> \u662F\u5BB9\u5668\u7684\u53CD\u5411\u8FED\u4EE3\u5668\uFF0C\u8868\u793A\u6700\u540E\u4E00\u4E2A\u5143\u7D20/\u7B2C\u4E00\u4E2A\u5143\u7D20\u3002<code>crbegin()</code>/<code>crend()</code> \u662F\u5BB9\u5668\u7684\u5E38\u91CF\u53CD\u5411\u8FED\u4EE3\u5668</li></ul><h3 id="\u5176\u4ED6\u8BBF\u95EE\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u8BBF\u95EE\u65B9\u5F0F" aria-hidden="true">#</a> \u5176\u4ED6\u8BBF\u95EE\u65B9\u5F0F</h3><ul><li><code>front()</code> \u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u5F15\u7528\u3002</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>back()</code> \u8FD4\u56DE\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u7684\u5F15\u7528\u3002</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>data()</code> \u8FD4\u56DE\u6307\u5411\u5BB9\u5668\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u6307\u9488\uFF08\u5730\u5740\uFF09</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 0x600003949100</span>
<span class="token operator">*</span>vec<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 1</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027" aria-hidden="true">#</a> \u5C5E\u6027</h2><p>\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4 <code>std::vector&lt;int&gt; vec{1, 2, 3, 4, 5, 6};</code></p><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> size</h3><p>\u8FD4\u56DE\u5F53\u524D\u5143\u7D20\u7684\u4E2A\u6570</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1, 2, 3, 4, 5, 6] -&gt; 6</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="capacity" tabindex="-1"><a class="header-anchor" href="#capacity" aria-hidden="true">#</a> capacity</h3><p>\u8FD4\u56DE\u5BB9\u91CF</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// [1, 2, 3, 4, 5, 6] -&gt; 6</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="reserve" tabindex="-1"><a class="header-anchor" href="#reserve" aria-hidden="true">#</a> reserve</h3><p>\u7528\u4E8E\u6269\u5BB9</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>
vec<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 0x600000d61100</span>
vec<span class="token punctuation">.</span><span class="token function">reserve</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
vec<span class="token punctuation">.</span><span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
vec<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 0x600000360270</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u6269\u5BB9\u524D\u540E\u7684\u5730\u5740\u662F\u4E0D\u4E00\u6837\u7684\uFF0Cvector \u5BB9\u5668\u5728\u7533\u8BF7\u66F4\u591A\u5185\u5B58\u7684\u540C\u65F6\uFF0C\u5BB9\u5668\u4E2D\u7684\u6240\u6709\u5143\u7D20\u53EF\u80FD\u4F1A\u88AB\u590D\u5236\u6216\u79FB\u52A8\u5230\u65B0\u7684\u5185\u5B58\u5730\u5740\uFF0C\u8FD9\u4F1A\u4F7F\u5F97\u539F\u6765\u7684\u5143\u7D20\u5730\u5740\uFF08\u7528\u4E8E\u8BBF\u95EE\u7684\u8FED\u4EE3\u5668\uFF09\u53D8\u5F97\u65E0\u6548\u3002</p><h3 id="max-size" tabindex="-1"><a class="header-anchor" href="#max-size" aria-hidden="true">#</a> max_size</h3><p>\u8FD4\u56DE\u53EF\u4EE5\u7533\u8BF7\u5230\u7684\u6700\u5927\u5143\u7D20\u4E2A\u6570\uFF0C\u6839\u636E\u5185\u5B58\u51B3\u5B9A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">max_size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 4611686018427387903</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="empty" tabindex="-1"><a class="header-anchor" href="#empty" aria-hidden="true">#</a> empty</h3><p>\u5224\u65AD\u662F\u5426\u4E3A\u7A7A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>vec<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="vector\u6269\u5BB9\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#vector\u6269\u5BB9\u7684\u539F\u7406" aria-hidden="true">#</a> vector\u6269\u5BB9\u7684\u539F\u7406</h2><p>\u505A\u4E00\u4E2A\u5C0F\u6D4B\u8BD5\uFF0C\u5B9A\u4E49\u4E00\u4E2A\u5BB9\u5668\u5E76\u521D\u59CB\u5316\u4E3A <code>[1,2,3]</code> \uFF0C\u4E0D\u65AD\u5411\u5BB9\u5668\u6DFB\u52A0\u5143\u7D20\uFF0C\u6765\u89C2\u5BDF\u5BB9\u5668\u7684\u53D8\u5316</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> vec<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  
<span class="token comment">// capacity=3  address=0x6000027cc040 [1,2,3]</span>

vec<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// capacity=6  address=0x6000025c9120 [1,2,3,4]</span>

vec<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>vec<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// capacity=12 address=0x600002bc8270 [1,2,3,4,8,8,8]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6839\u636E\u5730\u5740\u548C\u5BB9\u5668\u7684\u5BB9\u91CF\u53D8\u5316\uFF0C\u53EF\u4EE5\u770B\u51FA\uFF0C\u5F53\u5BB9\u5668\u5BB9\u91CF\u4E0D\u8DB3\u65F6:</p><ol><li>\u4F1A\u91CD\u65B0\u7533\u8BF7\u7A7A\u95F4\u3002\u65B0\u5BB9\u5668\u7684\u5BB9\u91CF\u662F\u539F\u6765\u5BB9\u5668\u7684<strong>2\u500D</strong>\uFF0C\u4E0D\u540C\u7F16\u8BD1\u5668\u7533\u8BF7\u7684\u7A7A\u95F4\u4E0D\u76F8\u540C\uFF0CMSVC\u7533\u8BF71.5\u500D\u65B0\u7A7A\u95F4\uFF0Cgcc/clang\u7533\u8BF72\u500D\u65B0\u7A7A\u95F4</li><li>\u5C06\u5BB9\u5668\u7684\u5143\u7D20\u5168\u90E8\u590D\u5236/\u79FB\u52A8\u5230\u65B0\u7684\u5BB9\u5668\u5185\u3002</li><li>\u4E4B\u524D\u7684\u6307\u9488\u3001\u5F15\u7528\u3001\u8FED\u4EE3\u5668\u4F1A\u5931\u6548\u3002\u9700\u8981\u91CD\u65B0\u751F\u6210</li></ol><p>Clang \u4E2D <code>vector</code> \u7684\u6E90\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u6269\u5BB9\u64CD\u4F5C\u662F\u6269\u59272\u500D</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">//  Precondition:  __new_size &gt; capacity()</span>
<span class="token keyword">template</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">_Tp</span><span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">_Allocator</span><span class="token operator">&gt;</span>
<span class="token keyword">inline</span> _LIBCPP_INLINE_VISIBILITY
<span class="token keyword">typename</span> <span class="token class-name">vector</span><span class="token operator">&lt;</span>_Tp<span class="token punctuation">,</span> _Allocator<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>size_type
<span class="token class-name">vector</span><span class="token operator">&lt;</span>_Tp<span class="token punctuation">,</span> _Allocator<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span><span class="token function">__recommend</span><span class="token punctuation">(</span>size_type __new_size<span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
    <span class="token keyword">const</span> size_type __ms <span class="token operator">=</span> <span class="token function">max_size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__new_size <span class="token operator">&gt;</span> __ms<span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token operator">-&gt;</span><span class="token function">__throw_length_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> size_type __cap <span class="token operator">=</span> <span class="token function">capacity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>__cap <span class="token operator">&gt;=</span> __ms <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> __ms<span class="token punctuation">;</span>
    <span class="token keyword">return</span> _VSTD<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">max</span><span class="token generic class-name"><span class="token operator">&lt;</span>size_type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>__cap<span class="token punctuation">,</span> __new_size<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,88);function e(t,c){return p}var l=n(a,[["render",e],["__file","vector.html.vue"]]);export{l as default};
